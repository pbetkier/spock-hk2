buildscript {
    repositories {
        mavenCentral()
    }
}

plugins {
    id 'pl.allegro.tech.build.axion-release' version '1.1.0'
}

apply plugin: 'groovy'
apply plugin: 'maven'
apply plugin: 'signing'

group = "com.github.pbetkier"
version = scmVersion.version

sourceCompatibility = 1.7

repositories {
    mavenCentral()
}

configurations {
    provided
    compile.extendsFrom provided
}

dependencies {
    provided 'org.glassfish.hk2:hk2-locator:2.3.0'
    compile 'org.spockframework:spock-core:0.7-groovy-2.0'
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

ext.isRelease = scmVersion.rawVersion.position.onTag
signing {
    required { isRelease && gradle.taskGraph.hasTask("uploadArchives") }
    sign configurations.archives
}

ext.ossrhUsername = properties['ossrhUsername']
ext.ossrhPassword = properties['ossrhPassword']

task checkOssrhPropertiesProvided << {
    if (ossrhUsername == null || ossrhPassword == null) {
        throw new IllegalStateException("ERROR: you need to have ossrhUsername and ossrhPassword " +
                "properties defined in your HOME/.gradle/gradle.properties file to upload archives")
    }
}

uploadArchives {
    dependsOn checkOssrhPropertiesProvided
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            pom.project {
                name 'Spock-HK2'
                packaging 'jar'
                description 'Spock extension which helps writing integration tests in your HK2-based application with explicit binders.'
                url 'https://github.com/pbetkier/spock-hk2'

                scm {
                    connection 'scm:git:https://github.com/pbetkier/spock-hk2.git'
                    developerConnection 'scm:git:https://github.com/pbetkier/spock-hk2.git'
                    url 'https://github.com/pbetkier/spock-hk2'
                }

                licenses {
                    license {
                        name 'The Apache License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id 'pbetkier'
                        name 'Piotr Betkier'
                    }
                }
            }
        }
    }
}
